// Code generated by go-bindata.
// sources:
// res/confirm.tpl
// res/favicon.ico
// res/gitflow.sql
// res/hook_update.tpl
// res/index.tpl
// res/layout.tpl
// res/repoadd.tpl
// res/repoedit.tpl
// res/useradd.tpl
// res/useredit.tpl
// res/users.tpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resConfirmTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\xca\x4f\xa9\x54\xaa\xad\xe5\xb2\x49\xc9\x2c\x53\x48\xce\x49\x2c\x2e\xb6\x55\x4a\xce\xcf\x4b\xcb\x2c\xca\x8d\xcf\x2d\x4e\x57\xb2\xe3\x52\x50\x50\x50\xa8\xae\x56\xd1\xf3\x2d\x4e\x07\xa9\xd3\x4f\xc9\x2c\xb3\xc3\xaa\x3c\xa9\xb4\xa4\x24\x3f\x0f\xaa\xc3\x26\x51\x21\xa3\x28\x35\xcd\x56\x09\xa4\x35\x32\xb5\xb8\xb6\x56\xc9\xee\xf9\xc2\x75\x4f\xd7\xcd\xb2\xd1\x4f\xb4\xe3\x82\x9a\x9a\x99\xa6\x90\x97\xaa\xa0\xa2\xe7\x97\xaf\xa0\x04\x72\x85\x02\x14\xa8\xe5\x25\x15\x17\x58\xe3\x27\xb9\xe0\xaa\x51\xec\xf2\xcb\x07\x59\xf5\xb4\x7f\xda\xb3\x6d\x1d\x60\xab\x20\x36\xa5\xe6\xa5\x20\x5c\x0f\xe3\x02\x02\x00\x00\xff\xff\x6d\xc0\xa1\xcc\x07\x01\x00\x00")

func resConfirmTplBytes() ([]byte, error) {
	return bindataRead(
		_resConfirmTpl,
		"res/confirm.tpl",
	)
}

func resConfirmTpl() (*asset, error) {
	bytes, err := resConfirmTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/confirm.tpl", size: 263, mode: os.FileMode(436), modTime: time.Unix(1487303166, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resFaviconIco = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x96\x5b\x68\x1c\x55\x18\xc7\x4f\xb5\x6b\x53\xb1\x4d\xa2\xed\x83\x22\xc9\x26\x73\x3b\x93\x07\x41\x03\x25\xa2\xd0\x1a\x93\xec\xdc\x27\x6d\xc4\xa2\x60\x71\x9f\x7d\xf1\x5d\x5a\x4a\xa9\x22\xbe\x14\xd2\x54\x08\x6a\x10\xda\x87\x0a\xa2\x0f\x45\xf1\x2d\xb6\x5e\xaa\x90\x97\x54\x1f\xa4\x1a\x63\x6b\xbb\x89\xbb\xdd\xec\x65\x76\x76\x67\x26\x97\x23\x67\x76\xa7\x33\x3b\x3b\x3b\xd9\xdd\x6e\x1b\xd0\x7c\xf0\x11\x32\x33\xff\xf3\xfb\x7f\xdf\x39\xe7\x4b\x00\xd8\x01\x1e\x02\x5d\x5d\xf8\x67\x14\xc0\x08\x00\x34\x00\x20\x1a\xad\xfc\xbe\x0f\x00\x25\x02\x00\x04\x00\x74\xe1\xe7\xa0\xfc\xdc\x8e\x08\x68\x22\xa6\x23\x64\x2c\x3d\xd9\xc7\x67\xcf\x00\x30\xbb\xb3\x19\xa5\xad\xe5\x72\x53\xac\x62\x21\x46\x5d\x45\x24\x97\x3f\xdb\xf8\x1a\xd3\x11\x22\x96\x3b\xc7\xaa\x6b\x88\x55\x57\x6d\x3d\x3b\xbe\x81\x48\xae\x70\x16\xbf\x0b\xd7\xce\x45\x08\x3e\x77\x6e\x40\x5d\x43\x8c\xac\xa3\x28\x7f\xe7\x4a\x1f\x97\xf9\x9e\x96\x4b\x88\x1d\x47\x28\x2a\xe4\xa7\xea\xfb\x98\x76\xb5\x8a\x89\x48\x3e\xfb\x1b\x20\xbf\xde\xf5\xe4\xe0\xdc\xa3\xa4\xa0\xfd\x69\xfb\x38\x8c\x10\x29\x14\x02\xd6\x98\xdd\x49\x72\xf9\xa9\x32\xb7\x80\x68\xa5\x84\x28\x51\x5b\xe9\x19\x4b\x0c\xf6\x1e\xfc\x7b\x88\x10\xf5\x1c\xa3\x5a\x88\x55\xd7\xd1\x00\x5e\x43\x32\x3d\xfd\x98\x8b\xe0\xfe\xb0\x8e\xb6\x92\x98\xd5\x17\x4b\x9d\xec\x8b\xa5\x4f\xb2\x13\x98\xab\x15\x49\x51\xbb\x71\xd7\x87\x68\x4e\xda\xf5\xc6\x92\x17\x58\xc5\xac\xd2\xd2\xb2\x5e\xae\x77\xf4\xd6\xf1\xe8\xd8\xf2\x89\x81\xc3\x1b\x88\x18\x49\xbf\xda\x3d\xb8\xd0\x49\xf2\xda\x65\xec\xc1\x5e\x5f\xd0\x3e\xed\x8b\x25\xbf\x64\x55\xcb\xd6\xb8\x59\xb4\xdf\x47\x63\xb7\x8e\x47\x47\x53\xa7\x49\x21\x9f\xe8\x1e\x59\xe9\xec\x7c\xf1\x46\x37\x21\xe4\xbe\x1d\x38\x52\xd6\x13\x5c\xe1\x73\x30\x74\x73\x37\x21\xe4\x67\x98\xf1\x0d\x5b\xe7\x24\x7b\x04\xa1\xfe\xb1\xf4\x7b\x04\x5f\x38\xd6\x33\x9a\x7e\xa1\x9f\xb3\x4e\x90\x92\xb5\xc0\xa8\xeb\xf6\x3b\x42\xb4\x3e\xc6\x5a\xbb\x05\x43\x3f\xee\x26\x04\x7d\x86\x19\x47\x08\xef\x15\xa3\x9a\x88\x14\x8b\x85\xde\xd8\xd2\x21\xfc\x9a\x10\x4a\xa7\xd8\x8a\x67\x5b\x2b\x19\x9f\x80\xde\xc5\x8e\xaa\x2d\x38\xb8\xd8\x41\x08\xc6\x0c\xfe\x06\xfb\x23\x79\xfd\x07\xfc\xd8\xae\x59\xd4\x97\x71\x3f\xf0\x73\x4a\xb0\x6a\xb5\x4e\x3c\x8d\x7d\x94\x2e\x50\x62\x71\xb1\x67\x38\xf9\x1c\xc9\x65\xde\xa6\x44\xf3\x3b\x46\x5d\x2b\x6b\xa5\x10\x6d\x25\x1e\x3f\x70\x7d\xef\xfe\x97\xb2\x04\x29\x94\xde\x75\xfc\xba\xdc\xd9\x50\xad\x27\x76\x10\xbc\x71\x9e\xad\xf4\xd9\xd6\x92\xd7\x77\x35\xa8\x2d\x47\xef\x62\x47\xbf\xa8\x7f\xd6\x2f\xe8\x17\x9b\xd6\xfe\x8f\x02\x56\x66\xe4\x21\xef\x9c\xdc\xd7\xbe\xf5\x69\x29\xff\x2c\x23\xac\x5c\x62\x84\xcc\x17\x50\xd2\x9e\x69\xdf\xca\x0d\xb1\x63\x50\xd2\x90\x37\x19\xb9\x30\xf2\x80\xd8\x63\x01\x6c\x27\x87\xef\x33\x3b\xa8\x6e\x5f\xea\x2f\xdf\x27\x76\x58\xdd\xf6\xdf\x25\x4f\xb6\xb5\x0f\x9b\xb3\xfd\xfc\x22\xce\xb6\xf4\x21\xac\xe7\x64\xec\x36\x22\xb9\x44\x10\xbb\x9c\xca\xbd\x79\xd8\xa4\xee\xd3\x8c\x5c\xd8\xc3\xc8\x7a\x27\x23\xeb\x67\x6a\xd8\x36\xbf\x84\xb3\xa5\xbd\x08\xab\x9b\x12\xee\x5c\xf1\x7f\x4f\xf1\xa9\x5f\x02\xd8\x76\x42\xc5\x68\xaa\x0f\x0d\xec\xf7\x07\x7e\x0d\x23\x17\x3f\xf2\xb3\x61\x99\xed\x64\x43\x7d\x68\xe4\xac\x91\x5c\x62\x85\x91\xf5\x47\x3c\xec\x4e\x92\x4b\x18\x01\x75\x7b\xd2\xc4\x19\xda\x87\x66\xee\x18\xc5\x27\xaf\xb9\xbd\x4f\xfe\xc1\xc8\xa5\x7a\x75\x3b\xec\x50\x0f\xad\xdc\x31\x4f\xfd\x9b\xd5\xed\x49\x0b\x41\xd5\x1a\xf6\xb1\x1b\x99\x6b\x55\x6c\x7c\xf7\x1c\xbd\x7d\x07\x3d\x6c\x8a\xfb\x07\x31\x92\x76\x89\x16\xd2\xd7\x02\xd8\x95\x5c\x1d\xa9\xb0\x9f\x6f\x61\xb6\xd4\xf0\x9d\x9e\x53\x7c\x32\x01\x15\x63\xbf\xf3\x0e\x2a\xe6\x64\x00\xdb\xc9\x03\x34\xb7\xf4\x7b\xb3\xec\x60\xfe\xdd\x9e\x1f\xf3\xef\x2d\xee\x47\x00\x1b\xd1\x62\xe6\x57\x2a\x76\x7b\xb9\x81\x79\x5e\x33\x5b\x30\xd3\x5d\x7f\x69\xdd\xb3\xdf\xaf\xd7\xe7\xaf\x56\x25\x25\xac\xdc\x84\x92\x26\x37\x53\xb7\x73\xd6\xbc\x7c\xa7\x7e\x5a\xcc\xfe\x04\x15\xb3\xea\xbf\x1c\xa8\x5a\xef\x07\xb1\xa1\xba\x86\x53\x28\x9f\xdf\x42\xbc\xb1\xba\xdd\x33\x4e\x71\x89\x0d\x77\x8f\x0d\x3c\x13\xff\xf2\xec\xf9\x2b\x8c\x6c\x9e\xa7\xa5\xdc\xd5\x10\xf6\x1b\x5e\x9f\xae\x87\xf0\xba\x7d\x77\x6c\x07\x54\x8c\x27\x18\x49\xfb\x0a\x2a\x66\x87\xc3\xae\x73\xd6\xea\xb2\x5d\x0f\x7a\xbc\x51\x36\x2d\xa4\x16\xa0\x62\x3c\xec\x70\x2b\xec\x89\x6a\xb6\x9f\x5f\x9f\xed\xf1\xf0\x66\x3d\xb6\x7b\xc7\x96\x35\xa8\x18\x7b\xab\xf6\x59\x31\x8f\xb6\x5a\x77\xad\x87\x62\x3c\xa4\xe7\xb8\x3f\x17\xfd\x1a\x5a\xcc\x5f\x6e\x07\xbb\xca\x43\xdd\x79\x6e\x7c\x58\xcb\xcf\xcc\xb7\xda\xf3\xba\x1e\x94\x52\xdc\x3f\xcf\x69\x31\xf3\x33\x54\xcc\xc7\x9c\x6f\xa0\x6a\xed\x81\xaa\x75\xaa\x5d\x75\xfb\x03\x2a\x46\xdc\x65\x67\xaf\xba\xcf\xcd\xa3\x14\x9f\x4a\xd5\x9b\x2d\xed\x60\x7b\x3c\xbc\xc3\x48\xda\x37\x1e\x76\xcb\x77\xec\xde\xbd\x98\xaf\x6d\x21\xfb\xa9\xad\x62\x57\xf8\x11\xa8\x5a\x6f\x6d\x05\xbb\xca\x87\xba\x1a\xdf\x2a\xb6\xc7\xc3\x04\x2d\x66\xe7\x69\x31\x37\x0f\xd5\xb5\xf1\x07\xc9\xde\x8e\xed\xd8\x8e\xff\x46\xfc\x1b\x00\x00\xff\xff\x3e\xc2\x78\xb2\x76\x19\x00\x00")

func resFaviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_resFaviconIco,
		"res/favicon.ico",
	)
}

func resFaviconIco() (*asset, error) {
	bytes, err := resFaviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/favicon.ico", size: 6518, mode: os.FileMode(436), modTime: time.Unix(1487303166, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resGitflowSql = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x93\xdf\xaf\x9a\x30\x14\xc7\xdf\xf9\x2b\xce\xdb\x85\xe4\x3e\xc0\xb2\x9b\x2c\x59\x7c\xe0\x62\xe7\xc8\xb0\x6e\x58\x1e\x7c\xb2\x55\xaa\x36\x83\x62\xda\xe2\xe6\x7f\xbf\x50\x36\xa3\xb0\xc8\x74\xe6\x3e\x91\xb6\xe7\x7b\x7e\x7c\xf8\x9e\x28\x45\x21\x41\x40\xc2\xd7\x04\x01\x55\x7c\x5f\x69\x61\x2a\x25\xb8\xa6\xe0\x3a\x00\x54\xe4\x14\x84\x34\x6e\xe0\x7b\x90\xe1\x79\x3c\xc1\x68\x0c\x78\x46\x00\x67\x49\x02\x61\x46\x66\xcb\x18\x47\x29\x9a\x22\x4c\x9e\x1b\x81\x64\x25\xa7\x70\x60\x6a\xbd\x63\xca\x0d\x7c\xdf\x83\xe8\x73\x98\x86\x11\x41\x29\xcc\x11\x81\x82\x19\x21\x03\x88\x66\x49\xd2\x94\x6e\x8f\xcb\x95\x90\xa7\xb4\x36\x4f\xc9\xb5\x66\x5b\x4e\xc1\xf0\x9f\xa6\x93\xa2\x36\x9b\x0f\xe5\xea\xfd\x29\xc7\xef\x73\x2f\xc9\xd7\x34\x9e\x86\xe9\x02\xbe\xa0\x05\xb8\xcd\x28\x5e\x73\x9b\xe1\xf8\x5b\x86\xec\x25\xcd\x85\xa2\xe0\xb6\x4d\x7b\x8e\x07\x08\x4f\x62\x8c\x46\xb1\x94\xd5\xf8\x15\xc6\xe8\x53\x98\x25\xc4\x56\x9f\x23\x32\xea\xd4\x1d\x9d\xd5\xfd\xe8\x38\x97\x2c\xd7\x95\xdc\x88\x6d\x97\x62\xe0\x5d\x85\xa7\xfe\x16\x68\x5f\xbe\xf3\x63\x97\xea\xc0\xf0\xf4\xc0\x8a\xfa\xec\x57\xbc\x7b\x79\x19\x16\x0d\x13\x53\xb6\x13\xd7\xb6\xfa\x6c\xdb\x7a\x2c\xb7\x3d\x57\xe5\xdd\xe6\x53\x57\x15\x36\xa4\x1e\x0e\x51\x75\xc1\x07\x62\xfa\x9c\x1e\x0a\xa1\xd6\x5c\xdd\x0d\xa1\x11\x77\xbc\x72\x31\xde\x9e\x69\x7d\xed\x5d\x68\x96\x97\x42\x52\x30\x42\x1e\x6d\xe5\x33\xd3\xfe\x99\xea\xc9\x7f\xfa\x37\xbf\xb4\xdd\xb8\xed\xf7\x7f\x29\xf5\x76\xac\x2c\x85\x59\x16\x55\x6f\xcf\xde\xd6\x30\x2b\xc5\xe4\x7a\x77\xeb\x7e\x56\x45\xae\xf8\xe1\x56\x95\xe4\x3f\x6e\x57\x3d\xdc\xae\xbf\x02\x00\x00\xff\xff\xe0\x76\xef\xdb\x38\x06\x00\x00")

func resGitflowSqlBytes() ([]byte, error) {
	return bindataRead(
		_resGitflowSql,
		"res/gitflow.sql",
	)
}

func resGitflowSql() (*asset, error) {
	bytes, err := resGitflowSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/gitflow.sql", size: 1592, mode: os.FileMode(436), modTime: time.Unix(1487556504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resHook_updateTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x53\xdd\x6e\xd3\x30\x14\xbe\xc6\x4f\xf1\xcd\xb5\xb6\x56\x5a\xb2\x6c\xdc\x41\xd3\x1b\x26\x60\xb7\x0c\xae\x10\xaa\xbc\xe4\x64\xb1\x92\xc6\x95\xed\x30\xba\xa8\x2f\x82\xc4\x33\xf0\x02\x3c\x0e\x17\x3c\x06\x72\x9c\xd0\x56\xab\x26\x72\x93\xcf\xe7\xef\x3b\xdf\xf1\xf1\xe4\xe4\xe2\x4e\x35\x17\x77\xd2\x96\x8c\x4d\x7e\xff\xfa\xfe\xe7\xe7\x0f\x95\x33\xab\xf2\x94\x77\x9d\x88\x6f\x55\xbe\xdd\x72\x56\x6a\x5d\x2d\x5b\x53\x07\xe3\x7b\xad\xab\x4f\xa6\xf6\x0e\x36\x41\x14\x45\x78\xa3\x57\x2b\xd9\xe4\xa8\x55\x43\xcc\x50\xd1\xc8\x15\xa5\x5c\x5c\x72\xa6\xeb\xdc\xd0\xd7\x94\x8b\x2b\xce\x1a\x7a\x08\xf8\x25\x67\x63\xe6\xad\x2c\xc8\x6d\x90\x95\x94\x55\x4c\x15\xf8\x8c\xe8\x11\x5c\xbc\xbb\xf9\xb8\xbc\xbe\xf9\xc0\xf1\xe5\x35\x5c\x49\x0d\x7b\x41\x59\xa9\xc1\xaf\x75\x73\xe6\x60\xda\x06\xae\x54\x16\x36\x33\x6a\xed\x50\x18\xbd\xf2\x61\xc8\xf6\xfa\x88\x39\x16\xa7\x57\x63\x22\xa6\xaa\xc0\x46\xb7\x78\x90\x8d\x3b\xef\x51\xa6\xdb\x3a\x87\x6d\xd7\xeb\x7a\x83\x81\xb0\x27\xf3\xf5\x0f\x93\x21\x12\xcc\x0d\x15\x0b\xcc\x83\xa0\x05\xe6\x41\xcd\x62\x36\x46\x7e\x53\x0e\x97\xac\x50\x6c\x4f\xc6\x30\x0a\x8e\x48\x07\x43\xc8\xde\x9d\x43\x91\x27\x32\x5b\x2b\xef\xe9\xd5\x33\xac\x4f\x49\x87\x8b\xf0\x73\x84\xdb\xac\xc9\xb2\x09\x54\x81\x81\x01\xca\x22\x49\x92\x24\x8e\x63\xff\x3b\x87\x72\x67\x16\xb2\x1f\x98\x72\x70\x1a\x39\xd5\xe4\x08\x12\x86\x8a\x98\x3d\x92\xd1\x29\x4f\xfe\xf3\xe3\x41\xf2\x4e\x4e\x0a\x2e\x7c\x89\x3d\x61\xc1\xb5\xf4\xad\xa5\x81\x8b\x51\x6d\xe9\xd0\x21\xa6\xf7\xca\x21\x93\x2e\x2a\x54\x4d\x88\xdc\xd8\xff\xac\xd7\xb8\x96\x46\xae\x6c\xca\xfd\x7a\x8a\xce\xaa\x7c\xcb\xff\xd9\x44\x17\xd0\xf6\x74\xdc\x3f\xd1\x0d\xe8\x68\xd4\xb0\x98\xa2\x0b\xe0\x68\xcc\xb0\xb0\xa2\x0b\xe0\x99\x98\xa1\xfd\x6e\xef\xe4\x5f\x87\xae\x52\x31\xcd\x5a\x53\x23\xb2\x88\x72\xec\xf2\xb8\xc7\xe3\xb3\xda\xf2\xd9\x38\x41\x5d\x71\x9c\xa4\xe0\xfe\x7f\xb8\x14\x42\x57\x47\x2e\xfc\xad\x6a\x94\x2d\x29\x67\xbd\x27\x61\x7f\x03\x00\x00\xff\xff\x92\xa5\x88\xc4\xd1\x03\x00\x00")

func resHook_updateTplBytes() ([]byte, error) {
	return bindataRead(
		_resHook_updateTpl,
		"res/hook_update.tpl",
	)
}

func resHook_updateTpl() (*asset, error) {
	bytes, err := resHook_updateTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/hook_update.tpl", size: 977, mode: os.FileMode(509), modTime: time.Unix(1487730773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resIndexTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x4f\x6b\x22\x31\x18\xc6\xef\xf9\x14\x21\x2c\x7b\x34\xec\x7a\xdc\x98\x85\xbd\xed\x61\xf7\xd0\x6f\x90\x69\xa2\x33\xa0\x33\x32\x89\x42\x09\x81\x9e\x44\x4a\x45\x4b\x4b\x4b\xa9\x05\x85\x42\x3d\x59\xa1\x07\x29\xfd\xf3\x69\x3a\x33\xfa\x2d\xca\xcc\x38\x5a\xeb\xdf\xcb\xc0\x9b\xe7\x79\xf3\xfc\x26\xef\xab\x35\x17\x45\xc7\x15\x10\x59\x1e\x3f\x42\xc6\x00\xc2\x9d\x3a\x3c\x2c\x33\x29\x0b\xc8\xaa\x29\xe5\xb9\x88\x02\xc2\xa0\xed\x8b\x62\x01\x61\xc6\x2b\x8e\x8b\x6b\x52\xf8\x12\xd1\xe8\x62\x10\x36\xc7\xd1\xb0\x1f\x75\x1a\x04\xb3\xf5\x3e\xc6\x79\xe6\x0c\x1f\x07\x41\xe3\x34\x75\x62\xee\xd4\x29\x48\xe2\x28\x20\x76\x9e\x4e\xfb\x4f\xd1\xcd\x30\x68\x5e\x4d\xfa\x03\x82\xed\x3c\x05\x44\x31\xab\x2c\x32\x98\xa4\x88\x59\x94\x4f\x01\x84\x10\x12\x65\xcf\x35\xfb\x07\xa2\x41\xa7\x15\xdd\x8f\x08\x56\xf6\x1a\xfd\x27\xa2\x61\xbb\x1d\x76\x1f\x36\xeb\x41\x77\x14\xdc\x1e\x6f\xe9\x3f\x6f\xbd\xbf\x76\x53\x9d\xe0\x98\x02\x68\xed\x33\xb7\x24\xe0\xb7\xdc\x81\xa8\x7a\xd2\x98\x59\xe3\x8c\x30\x2d\x78\x76\x8b\xcb\x2a\x02\x51\xad\x73\xff\x59\x45\x18\x43\xb0\xe2\x4b\xbe\x58\xfa\x27\xa4\x64\xa5\x0d\xea\x2c\xe6\x0f\x93\xc2\x98\x2d\xf7\xcc\x8b\xe4\xe0\xcb\x4c\x7c\x51\xf5\x04\x77\xd4\x6f\xdf\xe1\x05\xad\x73\x7f\xb9\x31\x88\x46\x2f\x97\x93\xb7\xb3\x64\x34\x9f\x9b\xbf\xbb\x96\xac\xfe\x5a\xfd\xee\x4c\xe0\xa2\xbc\x1c\x10\x34\x7b\xd3\xeb\xbb\xa5\x80\x05\x78\xfa\x9c\x5a\x0b\x97\x1b\x03\xf6\x78\xc4\xd5\x7f\xde\xe7\x64\x27\x75\xb2\xab\xe1\xf8\x39\x38\xe9\x6d\x25\x8d\xe7\x1f\xaf\xe3\x62\x8f\x33\xf6\x8f\x00\x00\x00\xff\xff\x72\x33\x3d\xd4\x51\x03\x00\x00")

func resIndexTplBytes() ([]byte, error) {
	return bindataRead(
		_resIndexTpl,
		"res/index.tpl",
	)
}

func resIndexTpl() (*asset, error) {
	bytes, err := resIndexTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/index.tpl", size: 849, mode: os.FileMode(436), modTime: time.Unix(1487556504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resLayoutTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x52\x4d\xaf\xd3\x30\x10\x3c\x3f\xff\x8a\x25\x0f\x6e\xa4\x71\x9f\x5a\x15\xb9\x6e\x2e\x85\x33\x1c\x7a\xe1\x84\x9c\x78\x9b\x58\x72\xec\xe0\x6c\xa0\x25\xca\x7f\x47\x89\x13\x54\xb8\x20\xc4\xc9\xfb\x31\xb3\x3b\xb6\x47\xbe\x7a\xff\xf1\x7c\xf9\xfc\xe9\x03\xd4\xd4\xd8\x9c\xc9\xf5\x40\xa5\x73\xf6\x24\x1b\x24\x05\x35\x51\x9b\xe2\xd7\xde\x7c\x3b\x25\x67\xef\x08\x1d\xa5\x97\x7b\x8b\x09\x94\x31\x3b\x25\x84\x37\xca\x26\xee\x11\xca\x5a\x85\x0e\xe9\xd4\xd3\x35\x7d\x97\xe4\x0c\x00\x40\x76\x74\xb7\x98\xb3\xc2\xeb\xfb\x30\x57\x5a\xa5\xb5\x71\x95\xe0\xc7\x39\x6d\x54\xa8\x8c\x13\xfb\xf6\x76\x64\x23\x63\x1b\x52\x85\x45\x88\xd0\xef\x46\x53\x2d\xb6\x9c\xbf\x89\xd8\xc2\x07\x8d\x21\x2d\xbd\xb5\xaa\xed\x50\xac\xc1\xc4\x5c\x88\xa4\xdf\xc2\x1a\xd6\xc3\x03\x4b\x6c\xdb\x1b\x74\xde\x1a\x0d\xcf\x87\xc3\x21\x52\xea\xed\xe3\xa2\x17\xce\xa3\x8a\x0d\xd5\xbb\x3f\x14\xfc\x6a\xec\x7f\x6b\xec\xf9\xaa\xbb\xec\x43\x40\x47\xb0\x71\xaa\xc1\x88\x29\xbd\xf5\x41\x54\x01\xd1\x2d\x18\xef\xae\x26\x34\x5f\x9a\xae\x8a\x88\xe9\xf1\x52\x65\x4d\xe5\x44\x89\x8e\x30\xc4\x7b\x5e\xbd\xa3\xb4\x33\x3f\x50\xbc\xec\x96\xc5\x2b\xb5\xe8\x89\xbc\xfb\x3f\x36\xa8\x47\x7d\xcf\x9c\x2f\x5f\x31\xcf\xd3\x58\xfa\xa0\xc8\x78\x27\x9c\x77\x18\x85\xff\x65\xeb\xb8\x22\xfe\x79\xf2\x6c\x91\x6c\xf1\x88\xcc\xa2\xf9\xe4\x64\x96\x9c\x3d\x0d\x03\x61\xd3\x5a\x45\x08\xc9\x54\x4a\xe0\xf5\x38\x32\x99\xc5\xb6\xcc\xa2\x63\x7f\x06\x00\x00\xff\xff\x2f\x2f\x03\x47\xc9\x02\x00\x00")

func resLayoutTplBytes() ([]byte, error) {
	return bindataRead(
		_resLayoutTpl,
		"res/layout.tpl",
	)
}

func resLayoutTpl() (*asset, error) {
	bytes, err := resLayoutTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/layout.tpl", size: 713, mode: os.FileMode(436), modTime: time.Unix(1487303166, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resRepoaddTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xdd\x6e\xd3\x30\x14\xbe\xcf\x53\x58\xbe\xe0\xd6\xe2\x1a\xc7\xaf\x32\x39\xb5\xbb\x46\x34\x76\x14\x3b\x15\x53\x55\x69\x20\x36\xa5\xd2\x46\x8b\x54\xc6\x3a\xb6\x8b\x08\x01\xe3\x62\xad\x84\xf8\x13\x6c\xe2\x61\x98\x9d\xf4\x6a\xaf\x80\xf2\x53\x96\x88\x1f\x0d\x2e\x76\x63\x25\x27\xe7\xfb\xbe\xf3\xe5\x9c\xe3\xe1\x90\xf1\xae\x2f\x38\x80\x9e\x64\x5b\x70\x34\x72\x30\xf3\x07\xa0\xd3\xa7\x4a\xb9\xd0\x8b\xb5\x96\x02\x12\x07\x53\xd0\x8b\x78\xd7\x85\x08\x92\xd5\xeb\x83\x55\xfa\x01\x23\xda\x0c\x53\x16\xf8\x02\xc5\x8a\x47\x0a\x92\x6c\x76\x6a\x93\x4f\xd9\x22\xcd\xa6\xbb\x55\x1e\x62\xfe\x80\x38\x0e\xee\xca\x28\x00\xb4\xa3\x7d\x29\x7e\x82\x22\x1e\x4a\xca\xd8\x06\x93\x10\x04\x5c\xf7\x24\x73\x61\x28\x95\x2e\x64\x4b\x18\x0e\x89\x03\x00\x00\xb8\x4f\x3d\xde\x07\x5d\x19\xb9\x50\xd0\x80\x43\x92\xbd\x58\x98\x8b\x67\x66\xba\x7f\x75\x7e\x84\x51\xf9\xb9\x4e\xf5\x45\x18\x6b\xe0\xb3\x3a\x13\x14\xe7\xfa\x59\x6f\x85\xdc\x85\x9a\x3f\xd0\x10\xa0\xa2\xb8\xf0\xf7\x1a\xd4\x93\xb1\x86\x24\x5f\xbe\xb7\x87\x4f\xfe\xa2\x50\xe5\xd5\x12\xf5\xcb\x4d\x35\xbc\x88\x8a\x4e\x6f\xa3\xc0\x2a\x48\x4c\xb2\x6b\x67\x4b\xf3\xf4\xc2\x4c\xf7\xf3\x37\x8f\x4d\x32\x6f\xc8\x62\x2f\x2a\xa8\x4a\x86\x82\x98\x46\x9c\x96\xfa\x2d\x8e\xba\x8c\x76\x0c\x11\x8c\xd6\x10\x02\x9a\x44\x2a\xa4\x82\xd8\xe5\x24\x4f\xf7\xee\xda\x93\xf4\xea\x7c\xcf\x4c\x96\x97\x5f\x5f\x15\x2d\x3c\x7b\x69\x92\xf9\xf7\xed\x47\xd9\xdb\x2f\x26\x99\x9b\x9d\x9d\x7c\xf1\xd9\x8e\xb7\xed\xf1\x18\xa3\x12\xf7\x67\x5b\x9a\x6e\xae\x3d\x69\xba\x79\x73\x2b\xd7\xb8\xda\x47\x23\x70\xeb\x26\xea\x7f\xd8\x97\x9d\xfb\x0a\x92\xd5\xec\xa1\x59\x1c\xd5\x1d\x4a\x9e\xe7\xe9\xe9\x3f\xf4\xa6\xe2\x68\xf7\xa6\x8e\xb5\x6c\xfd\x9f\x2b\xfb\x2e\xb5\xc7\xe3\x66\x81\x6d\x6f\xeb\xed\xab\x46\xb6\x1a\x4d\x15\x7b\x81\x7f\x3d\xb5\x1d\x0d\xc1\x80\xf6\x63\xee\xc2\xcb\x6f\x27\xe6\xec\xb0\x1c\xdb\x3b\xc2\x53\xe1\xbd\x5f\xcf\xd6\x7d\x60\x26\x07\xf6\x63\x52\xee\xb9\x83\x51\xb1\xe1\xc4\x71\x86\x43\x2e\xd8\x68\xe4\xfc\x08\x00\x00\xff\xff\x47\x7a\x09\x3d\x60\x04\x00\x00")

func resRepoaddTplBytes() ([]byte, error) {
	return bindataRead(
		_resRepoaddTpl,
		"res/repoadd.tpl",
	)
}

func resRepoaddTpl() (*asset, error) {
	bytes, err := resRepoaddTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/repoadd.tpl", size: 1120, mode: os.FileMode(436), modTime: time.Unix(1487556504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resRepoeditTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x94\xcf\x6f\xd3\x30\x14\xc7\xef\xf9\x2b\x2c\x0b\x71\x5c\xc4\x99\xc4\x07\x6e\x48\xc0\x01\x71\x9f\x9c\xda\x6d\x2d\x1a\x3b\x8a\x9d\x89\x29\x8a\x34\x10\x9b\x32\x69\x63\x45\x2a\x63\x1d\xdb\x21\x42\xc0\x38\xac\x95\x10\xbf\x04\x9b\xf8\x63\x98\xd3\xf6\xb4\x7f\x01\x39\x49\x69\xa2\x22\x04\x5c\xb8\x54\xee\x8b\xfd\xfd\xbc\xef\x7b\xf6\x8b\x63\x42\xdb\x8c\x53\x00\x3d\x41\xd6\x61\x92\x58\x0e\x61\x6b\xa0\xd5\xc3\x52\xba\xd0\x8b\x94\x12\x1c\x22\xcb\xc1\xa0\x1b\xd2\xb6\x0b\x6d\x88\x66\xaf\xf7\x67\xd9\x07\xc7\xc6\xf5\x30\x26\x3e\xe3\x76\x24\x69\x28\x21\x9a\x0c\x4e\xf2\xf4\xd3\x64\x94\x4d\xfa\x5b\xe5\x3e\x9b\xb0\x35\x64\x59\x4e\x5b\x84\x3e\xc0\x2d\xc5\x04\xff\x79\x28\xa4\x81\xa0\x84\xa9\x55\x22\x20\xf0\xa9\xea\x0a\xe2\xc2\x40\x48\x65\xb8\x8c\x07\x91\x02\x8c\xb8\x30\x64\x04\x02\x8e\x7d\x5a\x2d\xd5\x7a\x40\x5d\xd8\x65\x84\x50\x0e\xc1\x1a\xee\x45\xd4\x85\x71\x7c\x65\xe5\x2e\x0d\xc4\xca\x4d\x92\x24\x10\xd8\x86\x59\xa0\x9d\x00\x39\x3d\xec\xd1\x1e\x68\x8b\xd0\x85\x46\x07\xa2\xc9\x8b\x91\x3e\x7f\xa6\xfb\xbb\x97\x67\x87\x8e\x5d\x7c\x46\x35\x62\xb1\xa9\x42\x96\xeb\x92\xa9\xe8\x03\xb5\x4c\xbc\x83\x7d\x5a\x32\x1d\x3b\x58\x02\x62\x4f\x44\x0a\xa2\xe9\xf8\x7d\x7e\xf0\xe4\xd7\xb8\x72\x4b\xc5\xab\xfe\xfc\x0e\x78\x9b\x4a\x89\x3b\x0d\xe6\xbc\xcc\x01\xb2\x00\x00\xa0\x9e\x80\x17\x62\xde\xea\xae\x1a\x75\x09\x91\x4e\xb7\xf2\xc1\x58\x3f\x3d\xd7\xfd\xdd\xe9\x9b\xc7\x3a\x1d\xd6\x73\xf2\x42\x53\xb9\x42\xc1\xa0\x71\x48\x71\x91\x61\x43\xa3\x4a\xb4\x19\xb3\x91\x49\xef\x46\x11\x33\x05\x91\x49\xe2\xd8\x73\x0d\x04\xea\xca\x32\xc0\x1c\xe5\xe3\xbd\x69\xb6\x73\x2d\x3f\xce\x2e\xcf\x76\xf4\xde\xf8\xe2\xeb\x2b\x73\x79\x4e\x5f\xea\x74\xf8\x7d\xe3\xd1\xe4\xed\x17\x9d\x0e\xf5\xe6\xe6\x74\xf4\x39\xdf\xde\xc8\x8f\xb6\x1d\xbb\x38\x67\xcd\x6b\xbc\xe4\x53\xe1\xce\xdc\xa4\xc2\x9d\x3f\xf7\xb6\x38\x57\x19\xab\x05\x4a\x57\xf7\x70\xe7\xff\x58\xaa\x4a\xdc\x13\xad\xfb\x12\xa2\xd9\xe0\xa1\x1e\x1d\x56\x0d\x4c\x9f\x4f\xb3\x93\xbf\x68\x5d\xa9\xd1\x6c\x5d\x15\xab\xb7\xee\x96\x09\x35\x7c\xfe\x9b\xcd\xfc\x5d\x96\x1f\x6d\xd7\x33\x6e\x98\x9d\x3f\xef\xf2\x96\xcb\xc8\xf3\xd9\xe2\x01\xb4\x16\x57\xfe\xe2\xdb\xb1\x3e\x3d\x28\x9e\xf3\x55\xee\xc9\xe0\xfa\xf2\x6f\x63\x42\xe9\xbd\xfd\xfc\x63\x5a\x4c\x1e\xcb\xb1\xcd\xcc\x41\x96\x15\xc7\x94\x93\x24\xb1\x7e\x04\x00\x00\xff\xff\x26\x3d\x68\x20\xf2\x04\x00\x00")

func resRepoeditTplBytes() ([]byte, error) {
	return bindataRead(
		_resRepoeditTpl,
		"res/repoedit.tpl",
	)
}

func resRepoeditTpl() (*asset, error) {
	bytes, err := resRepoeditTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/repoedit.tpl", size: 1266, mode: os.FileMode(436), modTime: time.Unix(1487556504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resUseraddTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\xc1\x4a\xec\x30\x14\x86\xf7\x79\x8a\x70\x16\x77\x9b\x07\xb8\x49\x5e\x45\xd2\x39\x29\x13\x68\x93\xd0\xa4\xa3\x43\xe9\xc2\xcd\x30\x1b\x71\x16\x32\x88\x20\x38\x1b\x71\xa3\xae\xd4\x8d\xe0\xcb\xd8\x29\xb3\xf2\x15\xa4\xed\x14\x1d\xc6\x4d\xf9\x69\xfe\xef\x3b\xe4\xa4\xaa\x50\xa7\xc6\x6a\x0a\x89\xc3\x39\xd4\x35\xe1\x68\x66\x74\x92\xa9\x10\x04\x24\x65\x8c\xce\x82\x24\x5c\xd1\x69\xa1\x53\x01\x0c\xe4\xee\x7e\xbd\xdb\xbc\x70\xa6\x7e\xff\x56\x98\x1b\xcb\xca\xa0\x8b\x00\xb2\xbd\x7a\xd8\x2e\xdf\xda\xa7\x4d\xbb\x5a\x0c\x3d\x86\x66\x26\x09\xe1\xa9\x2b\x72\xaa\x26\xd1\x38\x7b\x00\x29\xc4\x13\x74\x40\x73\x1d\xa7\x0e\x05\x78\x17\x62\x37\xb6\xc7\xb8\x97\x3c\x53\x89\xce\x68\xea\x0a\x01\x5d\x7f\x9c\xd1\xac\x2e\xbe\xde\x6f\x38\xeb\x8f\x25\x37\xd6\x97\x91\x1a\xdc\x97\xa8\x55\xb9\x1e\x73\x9c\x7b\x2d\x20\xea\xb3\x08\x94\x49\xce\xfc\x91\xd8\xab\x10\x40\x36\xcf\x8b\xf6\xee\xfc\x6f\x6b\xdf\xd8\x5b\x87\x3c\x58\xbb\x7c\xea\x0a\xfc\x31\x8f\x17\x1e\xd8\xa1\x15\xca\x24\x37\x71\xe4\xd5\x24\x02\x9d\xa9\xac\xd4\x02\x3e\x3f\x6e\x9b\xc7\xeb\x8e\x26\xff\x6c\x12\xfc\xff\xe3\xef\xc1\x13\x34\x97\xeb\xed\xeb\xb2\x5f\x2d\xe1\xac\x5b\xaa\x24\xa4\xaa\xb4\xc5\xba\x26\xdf\x01\x00\x00\xff\xff\xdc\x62\x92\xf7\xd3\x01\x00\x00")

func resUseraddTplBytes() ([]byte, error) {
	return bindataRead(
		_resUseraddTpl,
		"res/useradd.tpl",
	)
}

func resUseraddTpl() (*asset, error) {
	bytes, err := resUseraddTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/useradd.tpl", size: 467, mode: os.FileMode(436), modTime: time.Unix(1487556504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resUsereditTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x41\x6b\x14\x3f\x18\xc6\xef\xf3\x29\x42\x58\xfe\xc7\x1d\x4a\x6f\xfd\x67\x02\x1e\xbd\x88\x08\x9e\x44\x24\xb3\x79\xd7\x09\xce\x4c\x86\x49\xa6\xb6\x84\x1c\x44\x28\xbd\x88\x2b\x48\xa9\x4a\xc1\x5e\x8a\x17\xdb\x93\x8a\x20\xf8\x65\x9c\x5d\xf6\xe4\x57\x90\x24\x93\xed\xd4\xb6\x5e\x86\x64\xf2\xbc\xf9\x3d\xf3\x3e\x99\x18\xc3\x61\x2e\x6a\x40\x38\x97\x7c\x1f\x5b\x9b\x10\x2e\x76\xd1\xac\x64\x4a\x65\x38\xef\xb4\x96\x35\xa6\x09\x61\xa8\x68\x61\x9e\xe1\x14\xd3\xf5\xd9\xd1\xfa\xf4\x0b\x49\xd9\xf8\x35\xe3\x95\xa8\xd3\x4e\x41\xab\x30\x5d\xbd\xfd\xb4\x3c\xfc\xb6\x3a\x3f\x5d\x2d\x0e\x82\x2e\xe5\x62\x97\x26\x09\x99\xcb\xb6\x42\x6c\xa6\x85\xac\xaf\x14\x01\x17\xfa\x09\x97\x18\x55\xa0\x0b\xc9\x33\xdc\x48\xa5\x1d\x57\xd4\x4d\xa7\x91\xe0\x19\xee\x04\xc7\xa8\x66\x15\x0c\x43\xbd\xdf\x40\x86\x0b\xc1\x39\xd4\x18\xed\xb2\xb2\x83\x0c\x1b\x33\x99\x3e\x54\xd0\x4e\xef\x72\x6b\x31\x4a\x1d\xd3\xa3\x49\x43\x49\xc9\x72\x28\xd1\x5c\xb6\x19\x76\xcc\xe8\xb3\x5f\xbc\xfa\xfd\xe3\x3d\x49\xfd\x32\x1d\x13\x9d\x28\x22\xfd\x38\x30\x35\xec\xe9\xeb\x44\xf7\x08\x4c\x92\x36\xd7\x80\x0d\x53\x0a\xd3\xfe\xe2\x60\xf5\xf1\xc5\xcd\x34\xaf\x18\x68\x61\x1c\x68\x6e\xfc\x5c\xb6\xfc\xb6\x9d\x85\xf2\x6d\xc4\x74\x79\x7c\xd1\x2f\xce\x42\xd7\xfb\x37\xc7\x37\x53\xa2\x7a\x00\x6d\xa6\x81\x35\x2b\x60\xf6\x2c\x97\x7b\x9b\xaf\xdb\xc2\xc8\x18\x31\x47\xb1\xab\x41\x8e\xac\xf5\x4a\xe0\x43\x09\x70\x6c\x0c\xd4\xdc\xda\x8d\xc9\x98\x78\xe8\x7e\xb1\x4d\x97\x27\x2f\xd7\xef\x16\xf1\x50\x14\xdb\x34\x21\x9a\xe5\x25\xc4\xb3\xe6\x27\x2e\x72\xdd\xd2\x04\x21\x84\x88\x2e\x36\x6b\xc5\x16\xa6\xeb\xd3\xef\xab\x0f\xe7\x24\xd5\x45\x58\x37\xa6\x65\xf5\x53\x40\x93\xe9\x83\xae\x04\x65\x6d\xac\xa2\xc6\x4c\xef\xe4\xb2\xd3\xd6\x8e\xd5\xde\x5f\x42\x52\xb7\x7f\x32\x2a\x86\x46\xc6\x62\x63\x26\x2d\x34\x72\x27\x9b\x6e\x76\x1b\xcc\x84\x09\x8f\x86\x5c\xf7\xb0\xe3\xdc\x63\x15\x78\x0c\xbf\xd4\xdd\x6c\x6c\xd8\x21\x86\xf1\x77\xc3\x87\xe0\xa1\xad\xd4\xa3\xc7\xe3\xd3\xe5\x0c\xf9\xe3\xbc\x63\xcc\x70\xac\x7d\x24\xa2\xe6\xb0\x87\x26\xd3\xfb\xae\x04\x45\x19\xf2\x92\x7f\xa6\x73\xd5\x6a\xe8\x8a\x37\xe7\x3b\x13\xdf\xb8\x46\xb9\x44\x46\x51\x8e\x8d\xab\x2e\xaf\x84\x8e\xb6\xd9\xec\xf2\x87\xf8\xf5\xf3\xa4\xff\x7c\xec\xff\xbd\xff\xea\x5c\x35\xff\x5f\x7f\xde\x76\x6f\xf4\xaf\x8f\x96\x5f\x0f\xfd\x8d\x91\x90\xd4\xdd\x15\x3e\xa9\x60\xe8\x4f\x00\x00\x00\xff\xff\x4c\x6d\x9a\xba\xaa\x04\x00\x00")

func resUsereditTplBytes() ([]byte, error) {
	return bindataRead(
		_resUsereditTpl,
		"res/useredit.tpl",
	)
}

func resUsereditTpl() (*asset, error) {
	bytes, err := resUsereditTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/useredit.tpl", size: 1194, mode: os.FileMode(436), modTime: time.Unix(1487556504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resUsersTpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x52\xcd\x4a\x03\x31\x10\xbe\xe7\x29\x42\x10\x8f\x0d\xda\xa3\xe9\x78\xf6\x01\x7c\x80\xac\x93\x9a\x40\x9b\xca\x26\x2d\x48\xc8\xbd\x08\x1e\x44\xa9\x08\x1e\x5a\x10\xe9\x0b\x48\x0f\xfe\x3c\x8d\xfd\x7b\x0b\xd9\xed\x6e\xd7\x45\x51\xf1\xb2\x30\x3b\x33\xdf\xcf\x7c\x09\x01\x55\xdb\x58\x45\x59\xd2\xc3\x73\x16\x23\x11\x68\x06\xf4\xa4\x23\x9d\x6b\xb1\xa4\xef\x7d\xcf\x32\x20\x42\x52\x9d\xaa\x76\x8b\x71\x06\xeb\xc7\xd1\x7a\xf2\x24\xb8\x04\x22\x38\x9a\x01\x90\x7c\x07\x88\xd0\x4d\x58\xde\x4c\x17\xc3\xd9\x7c\x78\xbb\x9a\x4c\x05\xd7\x4d\x20\xc2\xcb\xa4\xa3\x4a\xc4\xbc\xc8\x00\x7d\x0a\x84\x52\x4a\x85\xd7\xdb\x9e\xde\x63\x05\x80\xe0\x5e\x7f\xd3\xdf\x67\xb0\xb8\xbe\x7c\x7f\xbd\xdf\xf4\x05\xcf\x50\x48\x08\xa9\xb4\xa7\x8a\xee\x34\x8e\x9d\x4a\x5d\x8c\xc5\x62\xc1\xb0\x29\xb0\x44\xb1\xb2\xab\x18\x84\x90\x0f\xc7\x28\xb8\xc7\xda\x5c\x55\xe4\x3f\xb6\xc6\x25\x76\x8d\xe5\x7d\xa7\x52\x85\xc6\x1f\xf6\x0d\xb6\x42\x68\x1c\x61\x8c\x0c\x96\x2f\xa3\xd5\xdb\x55\x7e\x92\xcf\xcb\xbb\x36\x71\x67\x07\x5f\xbf\xbf\x32\xa0\xea\xd4\x09\xe6\xc3\xf1\xfa\xee\xa1\x46\x50\x09\xdf\x9c\x21\x04\x65\xf1\x4f\xde\xff\x61\x59\x22\x32\x58\xcc\x9e\xe7\x17\xe3\x32\xa0\x1f\xa4\x64\xc1\x64\x39\x57\x0f\xa4\x14\xf7\x11\x00\x00\xff\xff\xa5\x67\x56\xed\x6f\x02\x00\x00")

func resUsersTplBytes() ([]byte, error) {
	return bindataRead(
		_resUsersTpl,
		"res/users.tpl",
	)
}

func resUsersTpl() (*asset, error) {
	bytes, err := resUsersTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/users.tpl", size: 623, mode: os.FileMode(436), modTime: time.Unix(1487556504, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"res/confirm.tpl": resConfirmTpl,
	"res/favicon.ico": resFaviconIco,
	"res/gitflow.sql": resGitflowSql,
	"res/hook_update.tpl": resHook_updateTpl,
	"res/index.tpl": resIndexTpl,
	"res/layout.tpl": resLayoutTpl,
	"res/repoadd.tpl": resRepoaddTpl,
	"res/repoedit.tpl": resRepoeditTpl,
	"res/useradd.tpl": resUseraddTpl,
	"res/useredit.tpl": resUsereditTpl,
	"res/users.tpl": resUsersTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"res": &bintree{nil, map[string]*bintree{
		"confirm.tpl": &bintree{resConfirmTpl, map[string]*bintree{}},
		"favicon.ico": &bintree{resFaviconIco, map[string]*bintree{}},
		"gitflow.sql": &bintree{resGitflowSql, map[string]*bintree{}},
		"hook_update.tpl": &bintree{resHook_updateTpl, map[string]*bintree{}},
		"index.tpl": &bintree{resIndexTpl, map[string]*bintree{}},
		"layout.tpl": &bintree{resLayoutTpl, map[string]*bintree{}},
		"repoadd.tpl": &bintree{resRepoaddTpl, map[string]*bintree{}},
		"repoedit.tpl": &bintree{resRepoeditTpl, map[string]*bintree{}},
		"useradd.tpl": &bintree{resUseraddTpl, map[string]*bintree{}},
		"useredit.tpl": &bintree{resUsereditTpl, map[string]*bintree{}},
		"users.tpl": &bintree{resUsersTpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

